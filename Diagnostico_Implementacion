class Nodo:
    def __init__(self, valor):
        self.valor = valor
        self.izq = None
        self.der = None
class Arbol:
    def __init__(self):
        self.raiz = None

    def estaVacio(self): #Verifica si el árbol está vacío,Retorna True si no hay nodos en el árbol.
        return self.raiz is None
    def insertar(self, valor):#Inserta un valor en el árbol siguiendo las reglas, de un árbol binario de búsqueda (BST).
        if self.raiz is None:
            self.raiz = Nodo(valor)
        else:
            self._insertarRecursivo(self.raiz, valor)
    def _insertarRecursivo(self, nodo, valor):#Inserta un nodo de forma recursiva, Si el valor es menor, va a la izquierda.Si es mayor, va a la derecha.
        if valor < nodo.valor:
            if nodo.izq is None:
                nodo.izq = Nodo(valor)
            else:
                self._insertarRecursivo(nodo.izq, valor)
        else:
            if nodo.der is None:
                nodo.der = Nodo(valor)
            else:
                self._insertarRecursivo(nodo.der, valor)

    def buscarNodo(self, valor):#Busca un valor en el árbol binario de búsqueda,Retorna el nodo que contiene el valor si existe, en caso contrario retorna None.
        return self._buscarRecursivo(self.raiz, valor)

    def _buscarRecursivo(self, nodo, valor):#Implementación recursiva de la búsqueda.
        if nodo is None:
            return None
        if nodo.valor == valor:
            return nodo
        elif valor < nodo.valor:
            return self._buscarRecursivo(nodo.izq, valor)
        else:
            return self._buscarRecursivo(nodo.der, valor)
        
arbol = Arbol()
arbol.insertar(50)
arbol.insertar(30)
arbol.insertar(70)
arbol.insertar(20)
arbol.insertar(40)

nodo = arbol.buscarNodo(40)
if nodo:
    print(f"Nodo encontrado con valor: {nodo.valor}")
else:
    print("Nodo no encontrado")
